diff --git a/README.txt b/README.txt
index a4d4f3e..7139afb 100644
--- a/README.txt
+++ b/README.txt
@@ -1,3 +1,9 @@
+I'm using this repo to track my changes to the Drupal sms_twilio module. 
+See: http://drupal.org/node/988396
+
+ned@appliedtrust.com
+
+#####
 sms_twilio
 ~~~~~~~~~~
 
diff --git a/sms_twilio-D7port-1194626.patch b/sms_twilio-D7port-1194626.patch
new file mode 100644
index 0000000..6b27f68
--- /dev/null
+++ b/sms_twilio-D7port-1194626.patch
@@ -0,0 +1,230 @@
+diff --git a/sms_twilio.info b/sms_twilio.info
+index 611997e..d8d7152 100644
+--- a/sms_twilio.info
++++ b/sms_twilio.info
+@@ -1,13 +1,10 @@
+-; $Id: sms_twilio.info,v 1.1 2010/10/03 07:12:19 univate Exp $
++; $Id$
+ name = "Twilio"
+ description = "Allows the SMS Framework to use twilio.com as a gateway."
+ package = SMS Framework
+ dependencies[] = sms
+-core = 6.x
+-
+-; Information added by drupal.org packaging script on 2010-10-03
+-version = "6.x-1.0"
+-core = "6.x"
++core = 7.x
++version = "7.x-1.x-dev"
+ project = "sms_twilio"
+-datestamp = "1286091064"
+ 
++files[] = sms_twilio.module
+diff --git a/sms_twilio.module b/sms_twilio.module
+index cf9049b..c064263 100755
+--- a/sms_twilio.module
++++ b/sms_twilio.module
+@@ -7,13 +7,14 @@
+  */
+ 
+ /**
+- * Implementation of hook_gateway_info().
++ * Implements hook_gateway_info().
+  */
+ function sms_twilio_gateway_info() {
+   return array(
+     'twilio' => array(
+       'name' => 'Twilio',
+       'configure form' => 'sms_twilio_admin_form',
++      'receive' => TRUE,
+       'send' => 'sms_twilio_send',
+       'send form' => 'sms_twilio_send_form',
+     ),
+@@ -24,20 +25,20 @@ function sms_twilio_gateway_info() {
+  * Admin/settings form.
+  */
+ function sms_twilio_admin_form($configuration) {
+-  
++
+   //$form['sms_twilio_balance'] = array(
+   //  '#type' => 'item',
+   //  '#title' => t('Current balance'),
+   //  '#value' => sms_twilio_balance(),
+   //);
+-  
++
+   $form['sms_twilio_api_sid'] = array(
+     '#type' => 'textfield',
+     '#title' => t('Account SID'),
+     '#description' => t('Twilio account sid.'),
+     '#size' => 40,
+     '#maxlength' => 255,
+-    '#default_value' => $configuration['sms_twilio_api_sid'],
++    '#default_value' => !empty($configuration['sms_twilio_api_sid']) ? $configuration['sms_twilio_api_sid'] : '',
+   );
+   $form['sms_twilio_api_auth_token'] = array(
+     '#type' => 'textfield',
+@@ -45,7 +46,7 @@ function sms_twilio_admin_form($configuration) {
+     '#description' => t('Twilio auth token.'),
+     '#size' => 40,
+     '#maxlength' => 255,
+-    '#default_value' => $configuration['sms_twilio_api_auth_token'],
++    '#default_value' => !empty($configuration['sms_twilio_api_auth_token']) ? $configuration['sms_twilio_api_auth_token'] : '',
+   );
+   $form['sms_twilio_number'] = array(
+     '#type' => 'textfield',
+@@ -53,7 +54,7 @@ function sms_twilio_admin_form($configuration) {
+     '#description' => t('The number of your Twilio account.'),
+     '#size' => 40,
+     '#maxlength' => 255,
+-    '#default_value' => $configuration['sms_twilio_number'],
++    '#default_value' => !empty($configuration['sms_twilio_number']) ? $configuration['sms_twilio_number'] : '',
+   );
+   $form['sms_twilio_path'] = array(
+     '#type' => 'textfield',
+@@ -63,16 +64,22 @@ function sms_twilio_admin_form($configuration) {
+     '#maxlength' => 255,
+     '#default_value' => !empty($configuration['sms_twilio_path']) ? $configuration['sms_twilio_path'] : 'sites/all/libraries/twilio',
+   );
++  $form['sms_twilio_incoming_path'] = array(
++    '#type' => 'textfield',
++    '#title' => t('Twilio incoming URI path'),
++    '#description' => t('The URI that Twilio will post SMS messages to. This, plus your hostname, will be the URL you enter in your Twillio "Phone Numbers" configuration.'),
++    '#size' => 40,
++    '#maxlength' => 255,
++    '#default_value' => !empty($configuration['sms_twilio_incoming_path']) ? $configuration['sms_twilio_incoming_path'] : 'sms/twilio/incoming',
++  );
+ 
+- 
+   return $form;
+ }
+ 
+ /**
+  * Validates the submission of the configuration form.
+- */ 
+-function sms_twilio_admin_form_validate($form, &$form_state) {
+-}
++ */
++function sms_twilio_admin_form_validate($form, &$form_state) { }
+ 
+ /**
+  * Returns custom additions to be added to the send forms
+@@ -85,7 +92,7 @@ function sms_twilio_send_form() {
+     '#options' => sms_twilio_country_codes(),
+     '#default_value' => -1,
+   );
+-  
++
+   return $form;
+ }
+ 
+@@ -111,10 +118,10 @@ function sms_twilio_command($command = 'auth', $data = array(), $config = NULL,
+     $gateway = sms_gateways('gateway', 'twilio');
+     $config = $gateway['configuration'];
+   }
+- 
++
+   // Include the PHP TwilioRest library
+-  require_once $config['sms_twilio_path'] .'/twilio.php';
+-      
++  require_once DRUPAL_ROOT . '/' . $config['sms_twilio_path'] . '/twilio.php';
++
+   // Twilio REST API version
+   $ApiVersion = "2008-08-01";
+ 
+@@ -128,21 +135,27 @@ function sms_twilio_command($command = 'auth', $data = array(), $config = NULL,
+   switch ($command) {
+     case 'sendmsg':
+       // Check if the message requires unicode handling
+-      $response = $client->request("/$ApiVersion/Accounts/$AccountSid/SMS/Messages", 
++      $response = $client->request("/$ApiVersion/Accounts/$AccountSid/SMS/Messages",
+         "POST", array(
+-          "To" => $data['number'],
+-          "From" => $config['sms_twilio_number'],
+-          "Body" => $data['message']
++        "To" => $data['number'],
++        "From" => $config['sms_twilio_number'],
++        "Body" => $data['message'],
+       ));
+       break;
+   }
+   watchdog('sms_twilio', print_r($response, TRUE));
+   // Check for HTTP errors
+-  if($response->IsError) {
+-    $result = array('status' => FALSE, 'message' => t('An error occured during the HTTP request: @error', array('@error' => $response->ErrorMessage)));
++  if ($response->IsError) {
++    $result = array(
++      'status' => FALSE,
++      'message' => t('An error occured during the HTTP request: @error', array('@error' => $response->ErrorMessage)),
++    );
+   }
+   else {
+-    $result = array('status' => TRUE, 'data' => t('Message sent to @number', array('@number' => $data['number'])));
++    $result = array(
++      'status' => TRUE,
++      'data' => t('Message sent to @number', array('@number' => $data['number'])),
++    );
+   }
+   return $result;
+ }
+@@ -366,3 +379,60 @@ function sms_twilio_country_codes() {
+   );
+ }
+ 
++/**
++ * Implements hook_menu().
++ *
++ * Twilio will POST to this path when an SMS is received
++ */
++function sms_twilio_menu() {
++  $items = array();
++
++  if (!isset($configuration['sms_twilio_incoming_path'])) {
++    $configuration['sms_twilio_incoming_path'] = 'sms/twilio/incoming';
++  }
++  $items[$configuration['sms_twilio_incoming_path']] = array(
++    'title' => 'Incoming Twilio SMS',
++    'page callback' => 'sms_twilio_incoming',
++    'access callback' => TRUE,
++    'menu_name' => 'SMS',
++    'type' => MENU_CALLBACK,
++  );
++  return $items;
++}
++
++/**
++ * Informs the SMS Framework of the incoming SMS
++ */
++function sms_twilio_incoming() {
++  global $base_url;
++  if (isset($_REQUEST['From']) and isset($_REQUEST['To']) and isset($_REQUEST['FromCountry']) and isset($_REQUEST['FromCity']) and isset($_REQUEST['FromState']) and isset($_REQUEST['FromZip'])) {
++
++    // Details on validating the Twilio signature: http://www.twilio.com/docs/security
++    $gateway = sms_gateways('gateway', 'twilio');
++    $config = $gateway['configuration'];
++    $string_to_sign = $base_url . "/" . $config['sms_twilio_incoming_path'];
++    ksort($_POST);
++    foreach ($_POST as $key => $value) {
++      $string_to_sign .= $key . $value;
++    }
++    $sig = base64_encode(hash_hmac("sha1", $string_to_sign, $config['sms_twilio_api_auth_token'], true));
++
++    $from = $_REQUEST['From'];
++    $body = $_REQUEST['Body'];
++
++    if (strcmp($_SERVER["HTTP_X_TWILIO_SIGNATURE"], $sig) != 0) {
++      watchdog('sms_twilio', 'Incoming sms from @from has a bad Twilio signature - dropping!', array('@from' => $from), WATCHDOG_WARNING);
++    }
++    else {
++      // watchdog('sms_twilio', 'Handling incoming sms from '.$from.': '.$body);
++      $opts = array();
++      $opts['to'] = $_REQUEST['To'];
++      $opts['fromcountry'] = $_REQUEST['FromCountry'];
++      $opts['fromcity'] = $_REQUEST['FromCity'];
++      $opts['fromstate'] = $_REQUEST['FromState'];
++      $opts['fromzip'] = $_REQUEST['FromZip'];
++      sms_incoming($from, $body, $opts);
++    }
++  }
++}
++
diff --git a/sms_twilio.info b/sms_twilio.info
index 611997e..d7d0239 100644
--- a/sms_twilio.info
+++ b/sms_twilio.info
@@ -1,13 +1,10 @@
-; $Id: sms_twilio.info,v 1.1 2010/10/03 07:12:19 univate Exp $
-name = "Twilio"
+; $Id$
+name = "SMS Twilio"
 description = "Allows the SMS Framework to use twilio.com as a gateway."
-package = SMS Framework
+package = "SMS Framework"
 dependencies[] = sms
-core = 6.x
-
-; Information added by drupal.org packaging script on 2010-10-03
-version = "6.x-1.0"
-core = "6.x"
+core = 7.x
+version = "7.x-1.x-dev"
 project = "sms_twilio"
-datestamp = "1286091064"
 
+files[] = sms_twilio.module
diff --git a/sms_twilio.module b/sms_twilio.module
index cf9049b..b567de4 100755
--- a/sms_twilio.module
+++ b/sms_twilio.module
@@ -7,13 +7,14 @@
  */
 
 /**
- * Implementation of hook_gateway_info().
+ * Implements hook_gateway_info().
  */
 function sms_twilio_gateway_info() {
   return array(
     'twilio' => array(
       'name' => 'Twilio',
       'configure form' => 'sms_twilio_admin_form',
+      'receive' => TRUE,
       'send' => 'sms_twilio_send',
       'send form' => 'sms_twilio_send_form',
     ),
@@ -24,20 +25,20 @@ function sms_twilio_gateway_info() {
  * Admin/settings form.
  */
 function sms_twilio_admin_form($configuration) {
-  
+
   //$form['sms_twilio_balance'] = array(
   //  '#type' => 'item',
   //  '#title' => t('Current balance'),
   //  '#value' => sms_twilio_balance(),
   //);
-  
+
   $form['sms_twilio_api_sid'] = array(
     '#type' => 'textfield',
     '#title' => t('Account SID'),
     '#description' => t('Twilio account sid.'),
     '#size' => 40,
     '#maxlength' => 255,
-    '#default_value' => $configuration['sms_twilio_api_sid'],
+    '#default_value' => !empty($configuration['sms_twilio_api_sid']) ? $configuration['sms_twilio_api_sid'] : '',
   );
   $form['sms_twilio_api_auth_token'] = array(
     '#type' => 'textfield',
@@ -45,7 +46,7 @@ function sms_twilio_admin_form($configuration) {
     '#description' => t('Twilio auth token.'),
     '#size' => 40,
     '#maxlength' => 255,
-    '#default_value' => $configuration['sms_twilio_api_auth_token'],
+    '#default_value' => !empty($configuration['sms_twilio_api_auth_token']) ? $configuration['sms_twilio_api_auth_token'] : '',
   );
   $form['sms_twilio_number'] = array(
     '#type' => 'textfield',
@@ -53,7 +54,7 @@ function sms_twilio_admin_form($configuration) {
     '#description' => t('The number of your Twilio account.'),
     '#size' => 40,
     '#maxlength' => 255,
-    '#default_value' => $configuration['sms_twilio_number'],
+    '#default_value' => !empty($configuration['sms_twilio_number']) ? $configuration['sms_twilio_number'] : '',
   );
   $form['sms_twilio_path'] = array(
     '#type' => 'textfield',
@@ -63,14 +64,21 @@ function sms_twilio_admin_form($configuration) {
     '#maxlength' => 255,
     '#default_value' => !empty($configuration['sms_twilio_path']) ? $configuration['sms_twilio_path'] : 'sites/all/libraries/twilio',
   );
+  $form['sms_twilio_incoming_path'] = array(
+    '#type' => 'textfield',
+    '#title' => t('Twilio incoming URI path'),
+    '#description' => t('The URI that Twilio will post SMS messages to. This, plus your hostname, will be the URL you enter in your Twillio "Phone Numbers" configuration.'),
+    '#size' => 40,
+    '#maxlength' => 255,
+    '#default_value' => !empty($configuration['sms_twilio_incoming_path']) ? $configuration['sms_twilio_incoming_path'] : 'sms/twilio/incoming',
+  );
 
- 
   return $form;
 }
 
 /**
  * Validates the submission of the configuration form.
- */ 
+ */
 function sms_twilio_admin_form_validate($form, &$form_state) {
 }
 
@@ -85,7 +93,7 @@ function sms_twilio_send_form() {
     '#options' => sms_twilio_country_codes(),
     '#default_value' => -1,
   );
-  
+
   return $form;
 }
 
@@ -96,11 +104,13 @@ function sms_twilio_send($number, $message, $options) {
   $number = preg_replace("/[^0-9]/", '', $number);
   $number = trim($number);
   $number = ltrim($number, '0'); // Remove leading zeros
-  $index = strpos($number, $options['country']);
-  if ($index === FALSE || $index > 0) {
-    $number = $options['country'] . $number;
+  if (isset($options['country'])) {
+    $index = strpos($number, $options['country']);
+    if ($index === FALSE || $index > 0) {
+      $number = $options['country'] . $number;
+    }
   }
-  return sms_twilio_command('sendmsg', array('number' => $number, 'message' => $message), NULL, $account);
+  return sms_twilio_command('sendmsg', array('number' => $number, 'message' => $message), NULL, NULL);
 }
 
 /**
@@ -111,10 +121,10 @@ function sms_twilio_command($command = 'auth', $data = array(), $config = NULL,
     $gateway = sms_gateways('gateway', 'twilio');
     $config = $gateway['configuration'];
   }
- 
+
   // Include the PHP TwilioRest library
-  require_once $config['sms_twilio_path'] .'/twilio.php';
-      
+  require_once DRUPAL_ROOT . '/' . $config['sms_twilio_path'] . '/twilio.php';
+
   // Twilio REST API version
   $ApiVersion = "2008-08-01";
 
@@ -128,21 +138,27 @@ function sms_twilio_command($command = 'auth', $data = array(), $config = NULL,
   switch ($command) {
     case 'sendmsg':
       // Check if the message requires unicode handling
-      $response = $client->request("/$ApiVersion/Accounts/$AccountSid/SMS/Messages", 
+      $response = $client->request("/$ApiVersion/Accounts/$AccountSid/SMS/Messages",
         "POST", array(
-          "To" => $data['number'],
-          "From" => $config['sms_twilio_number'],
-          "Body" => $data['message']
+        "To" => $data['number'],
+        "From" => $config['sms_twilio_number'],
+        "Body" => $data['message'],
       ));
       break;
   }
   watchdog('sms_twilio', print_r($response, TRUE));
   // Check for HTTP errors
-  if($response->IsError) {
-    $result = array('status' => FALSE, 'message' => t('An error occured during the HTTP request: @error', array('@error' => $response->ErrorMessage)));
+  if ($response->IsError) {
+    $result = array(
+      'status' => FALSE,
+      'message' => t('An error occured during the HTTP request: @error', array('@error' => $response->ErrorMessage)),
+    );
   }
   else {
-    $result = array('status' => TRUE, 'data' => t('Message sent to @number', array('@number' => $data['number'])));
+    $result = array(
+      'status' => TRUE,
+      'data' => t('Message sent to @number', array('@number' => $data['number'])),
+    );
   }
   return $result;
 }
@@ -366,3 +382,60 @@ function sms_twilio_country_codes() {
   );
 }
 
+/**
+ * Implements hook_menu().
+ *
+ * Twilio will POST to this path when an SMS is received
+ */
+function sms_twilio_menu() {
+  $items = array();
+
+  if (!isset($configuration['sms_twilio_incoming_path'])) {
+    $configuration['sms_twilio_incoming_path'] = 'sms/twilio/incoming';
+  }
+  $items[$configuration['sms_twilio_incoming_path']] = array(
+    'title' => 'Incoming Twilio SMS',
+    'page callback' => 'sms_twilio_incoming',
+    'access callback' => TRUE,
+    'menu_name' => 'SMS',
+    'type' => MENU_CALLBACK,
+  );
+  return $items;
+}
+
+/**
+ * Informs the SMS Framework of the incoming SMS
+ */
+function sms_twilio_incoming() {
+  global $base_url;
+  if (isset($_REQUEST['From']) and isset($_REQUEST['To']) and isset($_REQUEST['FromCountry']) and isset($_REQUEST['FromCity']) and isset($_REQUEST['FromState']) and isset($_REQUEST['FromZip'])) {
+
+    // Details on validating the Twilio signature: http://www.twilio.com/docs/security
+    $gateway = sms_gateways('gateway', 'twilio');
+    $config = $gateway['configuration'];
+    $string_to_sign = $base_url . "/" . $config['sms_twilio_incoming_path'];
+    ksort($_POST);
+    foreach ($_POST as $key => $value) {
+      $string_to_sign .= $key . $value;
+    }
+    $sig = base64_encode(hash_hmac("sha1", $string_to_sign, $config['sms_twilio_api_auth_token'], TRUE));
+
+    $from = $_REQUEST['From'];
+    $body = $_REQUEST['Body'];
+
+    if (strcmp($_SERVER["HTTP_X_TWILIO_SIGNATURE"], $sig) != 0) {
+      watchdog('sms_twilio', 'Incoming sms from @from has a bad Twilio signature - dropping!', array('@from' => $from), WATCHDOG_WARNING);
+    }
+    else {
+      // watchdog('sms_twilio', 'Handling incoming sms from '.$from.': '.$body);
+      $opts = array();
+      $opts['to'] = $_REQUEST['To'];
+      $opts['fromcountry'] = $_REQUEST['FromCountry'];
+      $opts['fromcity'] = $_REQUEST['FromCity'];
+      $opts['fromstate'] = $_REQUEST['FromState'];
+      $opts['fromzip'] = $_REQUEST['FromZip'];
+      sms_incoming($from, $body, $opts);
+    }
+  }
+}
+
